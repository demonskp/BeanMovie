package com.fykj.yzy.beanmovie.DB;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fykj.yzy.beanmovie.bean.CollectionBean;
import com.fykj.yzy.beanmovie.bean.HistoryBean;
import com.fykj.yzy.beanmovie.bean.User;

import com.fykj.yzy.beanmovie.DB.CollectionBeanDao;
import com.fykj.yzy.beanmovie.DB.HistoryBeanDao;
import com.fykj.yzy.beanmovie.DB.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig collectionBeanDaoConfig;
    private final DaoConfig historyBeanDaoConfig;
    private final DaoConfig userDaoConfig;

    private final CollectionBeanDao collectionBeanDao;
    private final HistoryBeanDao historyBeanDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        collectionBeanDaoConfig = daoConfigMap.get(CollectionBeanDao.class).clone();
        collectionBeanDaoConfig.initIdentityScope(type);

        historyBeanDaoConfig = daoConfigMap.get(HistoryBeanDao.class).clone();
        historyBeanDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        collectionBeanDao = new CollectionBeanDao(collectionBeanDaoConfig, this);
        historyBeanDao = new HistoryBeanDao(historyBeanDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(CollectionBean.class, collectionBeanDao);
        registerDao(HistoryBean.class, historyBeanDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        collectionBeanDaoConfig.clearIdentityScope();
        historyBeanDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public CollectionBeanDao getCollectionBeanDao() {
        return collectionBeanDao;
    }

    public HistoryBeanDao getHistoryBeanDao() {
        return historyBeanDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
